{
  "format_version": "1.13.0",
  "minecraft:feature_rules": {
    "description": {
      "identifier": "better:forest_surface_oak_bush_feature",
      "places_feature": "better:oak_bush_feature"
    },
    "conditions": {
      "placement_pass": "surface_pass",
      "minecraft:biome_filter": [
        {
          "test": "has_biome_tag",
          "operator": "==",
          "value": "forest"
        },
        {
          "test": "has_biome_tag",
          "operator": "!=",
          "value": "largem"
        },
        {
          "test": "has_biome_tag",
          "operator": "!=",
          "value": "taiga"
        },
        {
          "test": "has_biome_tag",
          "operator": "!=",
          "value": "birch"
        },
        {
          "test": "has_biome_tag",
          "operator": "!=",
          "value": "dense"
        },
        {
          "test": "has_biome_tag",
          "operator": "!=",
          "value": "elven"
        },
        {
          "test": "has_biome_tag",
          "operator": "!=",
          "value": "beech"
        },
        {
          "test": "has_biome_tag",
          "operator": "!=",
          "value": "fir"
        },
        {
          "test": "has_biome_tag",
          "operator": "!=",
          "value": "canada"
        },
        {
          "test": "has_biome_tag",
          "operator": "!=",
          "value": "hills"
        },
        {
          "test": "has_biome_tag",
          "operator": "!=",
          "value": "mutated"
        }
      ]
    },
    "distribution": {
      "iterations": "math.clamp(math.trunc(math.ceil((query.noise(math.trunc(variable.originx / 45), math.trunc(variable.originz / 20)) + 0.2) * 20)), 2, 45)",
      "x": {
        "distribution": "uniform",
        "extent": [ 0, 16 ]
      },
      "y": "query.heightmap(variable.worldx, variable.worldz)",
      "z": {
        "distribution": "uniform", 
        "extent": [ 0, 16 ]
      }
    }
  }
}